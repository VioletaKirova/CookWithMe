@using  CookWithMe.Web.Infrastructure;
@model PaginatedList<CookWithMe.Web.ViewModels.Recipes.Browse.RecipeBrowseViewModel>

@{
    ViewData["Title"] = "Filtered Recipes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Content
================================================== -->
<br />
<div class="container">
    <div class="twelve columns">
        <!-- Headline -->
        <h3 class="headline">@ViewData["Title"]</h3>
        <span class="line rb margin-bottom-35"></span>
        <div class="clearfix"></div>
        <!-- Isotope -->
        <div class="isotope">
            @foreach (var recipe in Model)
            {
                <!-- Recipe -->
                <div class="four recipe-box columns">
                    <!-- Thumbnail -->
                    <div class="thumbnail-holder">
                        <a href="/Recipes/Details/@recipe.Id">
                            <img src="@recipe.Photo" alt="" />
                            <div class="hover-cover"></div>
                            <div class="hover-icon">View Recipe</div>
                        </a>
                    </div>
                    <!-- Content -->
                    <div class="recipe-box-content">
                        <h3><a href="/Recipes/Details/@recipe.Id" class="text-wrap">@recipe.Title</a></h3>
                        <div class="clearfix"></div>
                    </div>
                </div>
            }
        </div>
        <div class="clearfix"></div>
        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }
        <a asp-action="Filtered"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           class="button big @prevDisabled">
            Previous
        </a>
        <a asp-action="Filtered"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           class="button color big @nextDisabled">
            Next
        </a>
    </div>
    <!-- Sidebar
    ================================================== -->
    @await Component.InvokeAsync("CategorySidebar")
</div>
<div class="margin-top-50"></div>